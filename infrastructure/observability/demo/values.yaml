vmsingle:
  enabled: true
  spec:
    retentionPeriod: "7"
    storage:
      resources:
        requests:
          storage: 1Gi
  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
    - metrics.saurabhdev.in
       tls:
       - secretName: metrics-certs
         hosts:
         - metrics.saurabhdev.in   

alertmanager:
  enabled: true
  # spec:
  #   externalURL: https://alertmanager.saurabhdev.ins
  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
    - alertmanager.saurabhdev.in
    tls:
    - secretName: alertmanager-cert-sec
      hosts:
      - alertmanager.saurabhdev.in
  config:
    # global:
    #   smtp_from: saurabh@saurabhdev.in
    #   smtp_smarthost: smtp.gmail.com:587
    #   smtp_auth_username: saurabhdev
    #   smtp_auth_password: pleasenoteit:)
    #   smtp_require_tls: true
    # route:
    #   routes:
    #     - receiver: 'email-notifications'
    #       group_by: [cluster, namespace, alertname, alertgroup, job]
    #       group_wait: 30s
    #       group_interval: 1m
    #       repeat_interval: 1h

    receivers:
      # - name: 'email-notifications'
      #   email_configs:
      #     - to: 'saurabh@saurabhdev.in'
      #       headers:
      #         Subject: '[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .Alerts.Summary }}'

      - name: "slack-monitoring"
        slack_configs:
          - channel: "#channel"
            send_resolved: true
            title: '{{ template "slack.monzo.title" . }}'
            icon_emoji: '{{ template "slack.monzo.icon_emoji" . }}'
            color: '{{ template "slack.monzo.color" . }}'
            text: '{{ template "slack.monzo.text" . }}'
            actions:
              - type: button
                text: "Runbook :green_book:"
                url: "{{ (index .Alerts 0).Annotations.runbook_url }}"
              - type: button
                text: "Query :mag:"
                url: "{{ (index .Alerts 0).GeneratorURL }}"
              - type: button
                text: "Dashboard :grafana:"
                url: "{{ (index .Alerts 0).Annotations.dashboard }}"
              - type: button
                text: "Silence :no_bell:"
                url: '{{ template "__alert_silence_link" . }}'
              - type: button
                text: '{{ template "slack.monzo.link_button_text" . }}'
                url: "{{ .CommonAnnotations.link_url }}"
      - name: slack-code-owners
        slack_configs:
        - channel: "#{{ .CommonLabels.code_owner_channel }}"
          send_resolved: true
          title: '{{ template "slack.monzo.title" . }}'
          icon_emoji: '{{ template "slack.monzo.icon_emoji" . }}'
          color: '{{ template "slack.monzo.color" . }}'
          text: '{{ template "slack.monzo.text" . }}'
          actions:
            - type: button
              text: "Runbook :green_book:"
              url: "{{ (index .Alerts 0).Annotations.runbook }}"
            - type: button
              text: "Query :mag:"
              url: "{{ (index .Alerts 0).GeneratorURL }}"
            - type: button
              text: "Dashboard :grafana:"
              url: "{{ (index .Alerts 0).Annotations.dashboard }}"
            - type: button
              text: "Silence :no_bell:"
              url: '{{ template "__alert_silence_link" . }}'
            - type: button
              text: '{{ template "slack.monzo.link_button_text" . }}'
              url: "{{ .CommonAnnotations.link_url }}"

    inhibit_rules:
      - source_match:
          alertname: InfoInhibitor
        target_match:
          alertgroup: general.rules
        equal:
        - severity
      - source_match:
          severity: none
        target_match:
          severity: ^(?!(none)$)(.+)
        equal:
        - alertname
    #   - target_matchers:
    #       - severity=info
    #     source_matchers:
    #       - severity=warning
    #     equal:
    #       - cluster
    #       - namespace
    #       - alertname
    #   - target_matchers:
    #       - severity=info
    #     source_matchers:
    #       - alertname=InfoInhibitor
    #     equal:
    #       - cluster
    #       - namespace

vmalert: 
  enabled: true
  server:
    datasource:
      url: "http://vmsingle-vmstack-victoria-metrics-k8s-stack:8429"
    remote:
      write:
        url: "http://vmsingle-vmstack-victoria-metrics-k8s-stack:8429"
      read:
        url: "http://vmsingle-vmstack-victoria-metrics-k8s-stack:8429"

    notifier:
      alertmanager:
        url: "http://vmalertmanager-vmstack-victoria-metrics-k8s-stack:9093"

grafana:
  plugins:
  - marcusolsson-treemap-panel
  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
    - grafana.saurabhdev.in
    tls:
    - secretName: grafana-cert-sec
      hosts:
      - grafana.saurabhdev.in
  # additionalDataSources:
  # - name: Loki
  #   type: loki
  #   url: http://loki-gateway.logs
  dashboards:
    default:
      process-exporter:
        gnetID: 13882
        revision: 9
        dataSource: VictoriaMetrics

prometheus-node-exporter:
  enabled: true
